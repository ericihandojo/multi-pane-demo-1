// This component serves as the main application layout, containing a top pane, left pane, center pane, right pane, and bottom pane.
// It uses Angular's component architecture to organize the layout and functionality of the application.

import { Component, signal } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ResizeDirective } from './resize.directive';
import { TopPaneComponent } from './top-pane/top-pane.component';
import { LeftPaneComponent } from './left-pane/left-pane.component';
import { CenterPaneComponent } from './center-pane/center-pane.component';
import { RightPaneComponent } from './right-pane/right-pane.component';
import { BottomPaneComponent } from './bottom-pane/bottom-pane.component';
import { BehaviorSubject } from 'rxjs';

interface User {
  firstName: string;
  lastName:  string;
  address:   string;
  email:     string;
  phone:     string;
}

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [
    CommonModule,
    ResizeDirective,
    TopPaneComponent,
    LeftPaneComponent,
    CenterPaneComponent,
    RightPaneComponent,
    BottomPaneComponent
  ],
  template: `
    <div class="app-container">
      <!-- Top Pane -->
      <div class="pane top-pane">
        <app-top-pane
          [username]="username"
          [rightVisible]="rightVisible()"
          (logout)="onLogout()"
          (settings)="onSettings()"
          (toggleRight)="toggleRightPane()"
        ></app-top-pane>
      </div>

      <!-- Middle Row -->
      <div class="pane middle-row">
        <!-- LEFT PANE -->
        <div class="pane-section left-pane" #leftPane>
          <app-left-pane
            [menus]="menus"
            [selectedMenu]="selectedMenu()"
            (selectedMenuChange)="onMenuSelect($event)"
          ></app-left-pane>
        </div>

        <!-- SPLITTER: left ↔ center -->
        <div
          class="splitter"
          appResize
          [prev]="$any(leftPane)"
          [next]="$any(centerPane)"
        ></div>

        <!-- CENTER PANE -->
        <div class="pane-section center-pane" #centerPane>
          <app-center-pane
            [selectedMenu]="selectedMenu()"
            [userList$]="userList$"
            (submenuSelected)="onSubmenuSelected($event)"
          ></app-center-pane>
        </div>

        <ng-container *ngIf="rightVisible()">
          <!-- RIGHT PANE (collapsible) -->
          <div
            class="pane-section right-pane"
            #rightPane
            style="order:2">
            <app-right-pane
              [visible]="rightVisible()"
              [newTabLabel$]="newTabLabel$"
              [userList$]="userList$"
            ></app-right-pane>
          </div>

          <!-- SPLITTER: center ↔ right (only if right is visible) -->
          <div
            class="splitter"
            appResize
            [prev]="$any(centerPane)"
            [next]="$any(rightPane)"
            style="order:1">
          </div>
        </ng-container>
      </div>

      <!-- Bottom Pane -->
      <div class="pane bottom-pane">
        <app-bottom-pane></app-bottom-pane>
      </div>
    </div>
  `,
  styles: [
    `
    .app-container {
      height: 100vh;
      display: flex;
      flex-direction: column;
    }
    .pane { flex-shrink: 0; }

    .top-pane { height: 56px; }
    .bottom-pane { height: 40px; }

    .middle-row {
      flex: 1;
      display: flex;
      flex-direction: row;
      overflow: hidden;
    }

    .pane-section {
      display: flex;
      flex-direction: column;
      overflow: hidden;
    }
    .left-pane {
      flex: 0 0 200px;
      min-width: 120px;
      max-width: 400px;
      border-right: 1px solid #ccc;
    }
    .center-pane {
      flex: 1 1 auto;
      min-width: 200px;
      border-right: 1px solid #ccc;
    }
    .right-pane {
      flex: 1 1 auto;
      min-width: 200px;
      border-left: 1px solid #ccc; /* optional: switch to border-left for separation */
    }
    .splitter {
      width: 4px;
      background-color: #ddd;
      cursor: col-resize;
      z-index: 10;
    }
    .splitter:hover {
      background-color: #bbb;
    }
  `]
})
export class AppComponent {
  username = 'user name here';
  menus = ['menu1', 'menu2', 'menu3'];
  selectedMenu = signal<string | null>(null);
  private _rightVisible = signal<boolean>(true);
  rightVisible = this._rightVisible.asReadonly();

  // Shared user list for center and right panes
  userList$ = new BehaviorSubject<User[]>([]);

  // Submenu clicks for opening tabs
  newTabLabel$ = new BehaviorSubject<string | null>(null);

  onMenuSelect(menu: string) {
    this.selectedMenu.set(menu);
  }

  onSubmenuSelected(submenu: string) {
    this.newTabLabel$.next(submenu);
  }

  toggleRightPane() {
    this._rightVisible.update(v => !v);
  }

  onLogout() { console.log('Logout clicked'); }
  onSettings() { console.log('Settings clicked'); }
}
